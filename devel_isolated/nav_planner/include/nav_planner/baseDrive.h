// Generated by gencpp from file nav_planner/baseDrive.msg
// DO NOT EDIT!


#ifndef NAV_PLANNER_MESSAGE_BASEDRIVE_H
#define NAV_PLANNER_MESSAGE_BASEDRIVE_H

#include <ros/service_traits.h>


#include <nav_planner/baseDriveRequest.h>
#include <nav_planner/baseDriveResponse.h>


namespace nav_planner
{

struct baseDrive
{

typedef baseDriveRequest Request;
typedef baseDriveResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct baseDrive
} // namespace nav_planner


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::nav_planner::baseDrive > {
  static const char* value()
  {
    return "58d59f258ca9f2d2ba375d9428a7f1de";
  }

  static const char* value(const ::nav_planner::baseDrive&) { return value(); }
};

template<>
struct DataType< ::nav_planner::baseDrive > {
  static const char* value()
  {
    return "nav_planner/baseDrive";
  }

  static const char* value(const ::nav_planner::baseDrive&) { return value(); }
};


// service_traits::MD5Sum< ::nav_planner::baseDriveRequest> should match 
// service_traits::MD5Sum< ::nav_planner::baseDrive > 
template<>
struct MD5Sum< ::nav_planner::baseDriveRequest>
{
  static const char* value()
  {
    return MD5Sum< ::nav_planner::baseDrive >::value();
  }
  static const char* value(const ::nav_planner::baseDriveRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::nav_planner::baseDriveRequest> should match 
// service_traits::DataType< ::nav_planner::baseDrive > 
template<>
struct DataType< ::nav_planner::baseDriveRequest>
{
  static const char* value()
  {
    return DataType< ::nav_planner::baseDrive >::value();
  }
  static const char* value(const ::nav_planner::baseDriveRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::nav_planner::baseDriveResponse> should match 
// service_traits::MD5Sum< ::nav_planner::baseDrive > 
template<>
struct MD5Sum< ::nav_planner::baseDriveResponse>
{
  static const char* value()
  {
    return MD5Sum< ::nav_planner::baseDrive >::value();
  }
  static const char* value(const ::nav_planner::baseDriveResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::nav_planner::baseDriveResponse> should match 
// service_traits::DataType< ::nav_planner::baseDrive > 
template<>
struct DataType< ::nav_planner::baseDriveResponse>
{
  static const char* value()
  {
    return DataType< ::nav_planner::baseDrive >::value();
  }
  static const char* value(const ::nav_planner::baseDriveResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NAV_PLANNER_MESSAGE_BASEDRIVE_H
